[package]
name = "rust_os"
version = "0.1.0"
authors = ["James Tan <james_tan97@outlook.com>"]
edition = "2018"

[dependencies]
bootloader = { version = "0.9.8", features = ["map_physical_memory"] }
linked_list_allocator = "0.9.0"
pc-keyboard = "0.5.0"
pic8259 = "0.10.1"
# Mutex without std library
spin = "0.5.2"
uart_16550 = "0.2.0"
volatile = "0.2.6"
x86_64 = "0.14.2"

# Crate to allow us to lazily initiate static variables,
# allowing initialization to occur at runtime
[dependencies.lazy_static]
version = "1.0"
features = ["spin_no_std"] # Since we do not link the standard lib

[dependencies.crossbeam-queue]
version = "0.2.1"
# To make it no_std compatible, we need to disable default 
# features and enable the "alloc" feature
default-features = false 
features = ["alloc"]

[dependencies.conquer-once]
version = "0.2.0"
default-features = false

[dependencies.futures-util]
version = "0.3.4"
default-features = false
features = ["alloc"]

[package.metadata.bootimage]
test-args = [
        # So that 'bootimage runner' appends the below args to the default
        # QEMU command when running in test mode
        # This is so that the kernel will be able to interact with a special
        # device (isa-debug-exit) supported by QEMU that allows us to exit 
        # QEMU from the guest system. The iobase and iosize parameters
        # specify the I/O port through which the device can be accessed from the 
        # kernel
	"-device", "isa-debug-exit,iobase=0xf4,iosize=0x04",
	# Redirect from serial to stdout
	"-serial", "stdio",
	# Hide display since results will be printed to the terminal
	"-display", "none"
]
# Cargo considers non-zero exit codes as failures, this maps a 
# specified code to exit code 0
# (0x10 << 1) | 1 = 33
test-success-exit-code = 33 

[[test]]
name = "should_panic"
harness = false

[[test]]
name = "stack_overflow"
harness = false
